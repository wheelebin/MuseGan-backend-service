from glob import glob
import torch

from fastapi import FastAPI
from fastapi.responses import FileResponse

# Custom imports
import config
from predictions import predict, init_generator
from utilities import make_project_dirs

# Generator stuff
generator_file_path = glob(config.ROOT_DIR + "/models/LPD/final_check_tensor*")[0]
generator = init_generator(generator_file_path)

# Todo
# Organize project code into a flat structure inside of src
# Figure out good way to organise data needed and generated by this project
def run_generation():
    predict(generator)

def main():
    make_project_dirs()
    # run_training()
    run_generation()



if __name__ == "__main__":
    print("IS CUDA AVAILABLE?: ", torch.cuda.is_available())
    main()